---

- name: install packages for {{ ansible_os_family }}
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ dotfiles_packages[ansible_os_family|lower] }}"
  become: "{{ ansible_os_family|lower != 'darwin' }}"
  tags: packages

- name: create {{ dotfiles_git_base_dir }} for github projects
  file:
    path: "{{ dotfiles_git_base_dir }}"
    state: directory

- name: create ~/.config/zsh and directories under it
  file:
    path: "{{ ansible_user_dir }}/.config/zsh/{{ item }}"
    state: directory
  loop:
    - completions
    - functions
    - runcommands

- name: copy zshrc to home directory
  copy:
    src: files/zshrc
    dest: "{{ ansible_user_dir }}/.zshrc"

- name: create ~/.config/nvim and directories under it
  file:
    path: "{{ ansible_user_dir }}/.config/nvim/{{ item }}"
    state: directory
  loop:
    - autoload
    - colors

- name: symlink wal.vim colors from ~/.config/nvim/colors/wal.vim
  file:
    src: "{{ inventory_dir }}/roles/bootstrap/files/wal.vim"
    dest: "{{ ansible_user_dir }}/.config/nvim/colors/wal.vim"
    state: link

- name: symlink plug.vim from ~/.config/nvim/autoload/plug.vim
  file:
    src: "{{ inventory_dir }}/roles/bootstrap/files/plug.vim"
    dest: "{{ ansible_user_dir }}/.config/nvim/autoload/plug.vim"
    state: link

- name: symlink vimrc from ~/.config/nvim/init.vim and ~/.vimrc
  file:
    src: "{{ inventory_dir }}/roles/bootstrap/files/vimrc"
    dest: "{{ item }}"
    state: link
  loop:
    - "{{ ansible_user_dir }}/.vimrc"
    - "{{ ansible_user_dir }}/.config/nvim/init.vim"

- name: install vim plugins
  command: nvim -es -u {{ ansible_user_dir }}/.vimrc -i NONE -c "PlugInstall" -c "qa"
  changed_when: false

- name: symlink wal.lightline.vim from ~/.config/nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wal.vim
  file:
    src: "{{ inventory_dir }}/roles/bootstrap/files/wal.lightline.vim"
    dest: "{{ ansible_user_dir }}/.config/nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wal.vim"
    state: link
