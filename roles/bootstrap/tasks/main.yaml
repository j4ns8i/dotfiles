---

- name: include tasks for {{ ansible_os_family | lower }} if defined
  include_tasks: "{{ item }}"
  with_fileglob: "{{ ansible_os_family | lower }}.yaml"

- name: install packages for {{ ansible_os_family }}
  package:
    name: "{{ item }}"
    state: present
  loop: "{{ bootstrap_packages[ansible_os_family|lower] }}"
  become: "{{ ansible_os_family|lower != 'darwin' }}"
  tags: packages

- name: create {{ bootstrap_git_base_dir }} for github projects
  file:
    path: "{{ bootstrap_git_base_dir }}"
    state: directory

- name: create ~/.config/zsh and directories under it
  file:
    path: "{{ bootstrap_home_dir }}/.config/zsh/{{ item }}"
    state: directory
  loop:
    - completions
    - functions
    - runcommands

- name: copy zshrc to home directory
  copy:
    src: files/zshrc
    dest: "{{ bootstrap_home_dir }}/.zshrc"

- name: create ~/.config/nvim and directories under it
  file:
    path: "{{ bootstrap_home_dir }}/.config/nvim/{{ item }}"
    state: directory
  loop:
    - autoload
    - colors

- name: symlink local.zsh from ~/.config/zsh/runcommands
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/local.zsh"
    dest: "{{ bootstrap_home_dir }}/.config/zsh/runcommands/local.zsh"
    state: link

- name: clone https://github.com/j4ns8i/pure
  git:
    repo: https://github.com/j4ns8i/pure
    dest: "{{ bootstrap_git_base_dir }}/github.com/j4ns8i/pure"
  become: true
  become_user: "{{ ansible_user_id }}"

- name: symlink ../pure/pure.zsh to ~/.config/zsh/functions/prompt_pure_setup
  file:
    src: "{{ bootstrap_git_base_dir }}/github.com/j4ns8i/pure/pure.zsh"
    dest: "{{ bootstrap_home_dir }}/.config/zsh/functions/prompt_pure_setup"
    state: link

- name: symlink ../pure/async.zsh to ~/.config/zsh/functions/async
  file:
    src: "{{ bootstrap_git_base_dir }}/github.com/j4ns8i/pure/async.zsh"
    dest: "{{ bootstrap_home_dir }}/.config/zsh/functions/async"
    state: link

- name: symlink wal.vim colors from ~/.config/nvim/colors/wal.vim
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/nvim/wal.vim"
    dest: "{{ bootstrap_home_dir }}/.config/nvim/colors/wal.vim"
    state: link

- name: symlink plug.vim from ~/.config/nvim/autoload/plug.vim
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/nvim/plug.vim"
    dest: "{{ bootstrap_home_dir }}/.config/nvim/autoload/plug.vim"
    state: link

- name: symlink vimrc from ~/.config/nvim/init.vim and ~/.vimrc
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/nvim/init.vim"
    dest: "{{ item }}"
    state: link
  loop:
    - "{{ bootstrap_home_dir }}/.vimrc"
    - "{{ bootstrap_home_dir }}/.config/nvim/init.vim"

- name: create ~/.config/alacritty
  file:
    path: "{{ bootstrap_home_dir }}/.config/alacritty"
    state: directory

- name: symlink alacritty.yml from ~/.config/alacritty/alacritty.yml
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/alacritty/alacritty.yml"
    dest: "{{ bootstrap_home_dir }}/.config/alacritty/alacritty.yml"
    state: link

- name: install vim plugins
  command: nvim -es -u {{ bootstrap_home_dir }}/.vimrc -i NONE -c "PlugInstall" -c "qa"
  when: ansible_user_id != "root"
  changed_when: false

- name: symlink wal.lightline.vim from ~/.config/nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wal.vim
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/nvim/wal.lightline.vim"
    dest: "{{ bootstrap_home_dir }}/.config/nvim/plugged/lightline.vim/autoload/lightline/colorscheme/wal.vim"
    state: link
  when: ansible_user_id != "root"

- name: create ~/.config/git
  file:
    path: "{{ bootstrap_home_dir }}/.config/git"
    state: directory

- name: install git config
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/config/git/config"
    dest: "{{ bootstrap_home_dir }}/.config/git/config"
    state: link

- name: install tmux config
  file:
    src: "{{ bootstrap_dotfiles_path }}/roles/bootstrap/files/tmux.conf"
    dest: "{{ bootstrap_home_dir }}/.tmux.conf"
    state: link

- name: include gnome tasks if using gnome
  include_tasks: "gnome.yaml"
  when: (ansible_env["XDG_CURRENT_DESKTOP"] | default(omit)).find('GNOME') != -1
