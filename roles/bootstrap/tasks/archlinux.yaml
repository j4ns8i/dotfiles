---

- name: link proper time zone to /etc/localtime
  file:
    src: /usr/share/zoneinfo/America/Los_Angeles
    dest: /etc/localtime
    state: link
  become: true

- name: run hwclock to sync time
  command: hwclock --systohc
  become: true

- name: enable en_US.UTF-8 in /etc/locale.gen
  lineinfile:
    path: /etc/locale.gen
    regexp: "^(# )?en_US.UTF-8 UTF-8"
    line: "en_US.UTF-8 UTF-8"
    state: present
  become: true

- name: run locale-gen
  command: locale-gen
  become: true

- name: create /etc/locale.conf with LANG variable
  lineinfile:
    path: /etc/locale.conf
    line: "LANG=en_US.UTF-8"
    create: true
    state: present
  become: true

- name: create /etc/hostname
  lineinfile:
    path: /etc/hostname
    line: "{{ bootstrap_host }}"
    create: true
    state: present
  become: true

- name: populate /etc/hosts
  lineinfile:
    path: /etc/hosts
    line: "{{ item }}"
    create: true
    state: present
  with_items:
    - "127.0.0.1	localhost"
    - "::1		localhost"
    - "127.0.1.1	{{ bootstrap_host }}.localdomain {{ bootstrap_host }}"
  become: true

- name: add lvm2 related mkinitcpio hooks
  lineinfile:
    path: /etc/mkinitcpio.conf
    line: "HOOKS=(base systemd autodetect modconf block lvm2 filesystems fsck)"
    regexp: "^HOOKS=\\(.*\\)$"
    state: present
  register: bootstrap_mkinitcpio
  become: true

- name: install ramdisk with mkinitcpio
  command: mkinitcpio -P
  when: bootstrap_mkinitcpio.changed
  become: true

- name: run refind-install
  command: refind-install
  become: true

- name: set refind options
  template:
    src: refind_linux.conf.j2
    dest: /boot/refind_linux.conf
  become: true

- name: ensure arch kernel names are supported by refind
  lineinfile:
    path: /boot/EFI/refind/refind.conf
    line: "extra_kernel_version_strings linux-hardened,linux-zen,linux-lts,linux"
    regexp: "^#?extra_kernel_version_strings "
    state: present
  become: true

- name: set root login
  user:
    name: root
    password: "{{ 'changeme' | password_hash('sha512', bootstrap_salt) }}"
    shell: /bin/zsh
  become: true
  tags: initial

- name: add systemd.network file to enable DHCP on any interface
  copy:
    src: 80-dhcp.network
    dest: /etc/systemd/network/80-dhcp.network
    mode: 0644
  become: true

- name: enable, reload, and start systemd-networkd
  systemd:
    name: systemd-networkd
    state: reloaded
    enabled: true
  become: true

- name: enable and start systemd-resolved
  systemd:
    name: systemd-resolved
    state: started
    enabled: true
  become: true

- name: add {{ bootstrap_user }}
  user:
    name: "{{ bootstrap_user }}"
    password: "{{ bootstrap_password | password_hash('sha512', bootstrap_salt) }}"
    shell: /bin/zsh
    group: users
    groups:
      - wheel
  become: true
  tags: initial

- name: set bootstrap_home_dir if running as root
  set_fact:
    bootstrap_home_dir: /home/{{ bootstrap_user }}
  when: ansible_user_id == "root"

- name: make sure repo is cloned under {{ bootstrap_home_dir }}
  git:
    repo: https://github.com/j4ns8i/dotfiles
    dest: "{{ bootstrap_dotfiles_path }}"
  become: true
  become_user: "{{ bootstrap_user }}"
  tags: initial

- name: add sudoers file
  copy:
    src: sudoers
    dest: "/etc/sudoers.d/{{ bootstrap_host }}"
    mode: 0440
  become: true
