---

- name: check if pyenv is installed
  ansible.builtin.command: which pyenv
  changed_when: false
  failed_when: false
  register: python_pyenv_install_check

- name: install pyenv
  block:
    - name: install pyenv dependencies
      package:
        name: "{{ item }}"
        state: present
      loop: "{{ python_pyenv_dependencies[ansible_os_family|lower] }}"
      become: "{{ ansible_os_family|lower != 'darwin' }}"

    - name: create temporary file to hold pyenv-installer script
      ansible.builtin.tempfile:
        state: file
        suffix: _pyenv_installer.tmp
      register: python_tmp_pyenv_installer
      notify: remove pyenv installer

    - name: download pyenv-installer script
      ansible.builtin.get_url:
        url: https://github.com/pyenv/pyenv-installer/raw/master/bin/pyenv-installer
        dest: "{{ python_tmp_pyenv_installer.path }}"
        mode: a+rx

    - name: run pyenv-installer script
      ansible.builtin.script: "{{ python_tmp_pyenv_installer.path }}"
  when: python_pyenv_install_check.rc != 0

- name: check if pipenv is installed
  ansible.builtin.command: which pipenv
  changed_when: false
  failed_when: false
  register: python_pipenv_install_check

- name: install pipenv
  block:
    - name: install pipenv
      ansible.builtin.pip:
        name: pipenv
        extra_args: --user

    - name: install dependencies for neovim tools
      ansible.builtin.pip:
        name: "{{ item }}"
        extra_args: --user
      loop:
        - mypy
        - python-lsp-server
        - flake8
        - pynvim
  when: python_pipenv_install_check.rc != 0
